---
title: "TidyFriday"
author: "Lisbeth, Kirstine & Marlene"
format: 
 revealjs: 
  code-fold: true
  progress: TRUE
  slide-number: true
  preview-links: auto
  css: styles.css
  embed-resources: true
  smaller: true
  scrollable: true
editor: visual
---

## Bee Colonies Lost {background-color="black" background-image="https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExazh3NTdlZ3ptbGJwa2oyeTJ3MjU1aTJoOTkxMTI2MTllYWZiczRkdyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/Yr5cLTZS4Gp3CQRVHs/giphy.webp" background-size="400px"}

## Data and variables {.smaller}

```{r}
#| echo: true
library(tidyverse)
library(usmap)
colony <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv')

knitr::kable(colony %>% 
  relocate(colony_lost, colony_added, .after = state))
```

## Bee Balance

We focused on our variable: "bee_blance":

```{r}
#| echo: true
#Compute bee balance
data <- colony %>%
  mutate(quarterly_bee_balance = colony_added - colony_lost) %>%
  group_by(year, state) %>%
  summarize(bee_balance = sum(quarterly_bee_balance, na.rm = TRUE),
            bee_lost = sum(colony_lost, na.rm = TRUE),
            bee_gained = sum(colony_added, na.rm = TRUE)) %>%
  ungroup

#Compute total bee balance
data <- data %>%
  arrange(state) %>%
  group_by(state) %>%
  mutate(bee_balance_state = sum(bee_balance)) %>%
  ungroup()

#Table of sum(added - lost) per state
knitr::kable(data %>% 
  relocate(bee_lost, bee_gained, bee_balance, bee_balance_state, .after = state))

```

## Plot 1: Bee Balance Overall

= Kirstines plot
```{r}
#| echo: true
#To make a dataset with only dat for the entire US 
colony_balance <- colony %>% 
  mutate(bee_balance = colony_added - colony_lost)

US_total <- colony_balance %>%  
  filter(state == "United States")

#We want to plot year as a continous variable with the month data 
US_total$months_num <- recode(US_total$months, "January-March" = 0, 	
                              "April-June" = 0.25,
                              "July-September" = 0.5,
                              "October-December" = 0.75)

#new column with the year and month merged 
US_total_new_month <- US_total %>% 
  mutate(year_month = (year + months_num))

#Plot with lost bees accumulation
G1 <- US_total_new_month %>% 
  ggplot(aes(year_month, cumsum(replace_na(colony_lost, 0))/1e6)) +
  geom_line(color = "red") +
  theme_minimal(base_size = 14) +
  labs(x = "Year",
       y =  "Colonies Lost (Millions)") +
  ggtitle("Lost Bee Colonies in The US") +
  scale_y_continuous(breaks = c(0:10), 
                     labels = label_comma()) +
  scale_x_continuous(breaks = c(2015:2021), minor_breaks = seq(2015, 2021, 0.25))

#Plot with added bees accumulation
G2 <- US_total_new_month %>% 
  ggplot(aes(year_month, cumsum(replace_na(colony_added, 0))/1e6)) +
  geom_line(color = "green") +
  theme_minimal(base_size = 14) +
  labs(x = "Year",
       y =  "Colonies Added (Millions)") +
  ggtitle("Added Bee Colonies in The US") +
  scale_y_continuous(breaks = c(0:10), 
                     labels = label_comma()) +
  scale_x_continuous(breaks = c(2015:2021), minor_breaks = seq(2015, 2021, 0.25))

ggarrange(G1, G2)
```

```{r}
#| echo: true
#% colonies lost
US_total_new_month %>% 
  ggplot(aes(year_month, colony_lost_pct, fill = months)) +
  geom_col(color = "yellow") +
  theme_minimal(base_size = 16) +
  scale_x_continuous(breaks = c(2015:2021)) +
  scale_y_continuous(breaks = seq(0, 20, 5), limits = c(0, 20)) +
  labs(x = "Year",
       y =  "Colonies lost (%)",
       fill = "Month") +
  ggtitle("Lost Bee Colonies in The United States")
```

```{r}
#| echo: true
#Plot of the Bee balance in the US during the years 
US_total_new_month %>% 
  ggplot(aes(year_month, bee_balance)) +
  geom_line() +
  theme_minimal(base_size = 16) +
  labs(x = "Year",
       y =  "Bee Balance") +
  ggtitle("Bee Balance in The US") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black") + 
  scale_y_continuous(breaks = c(-600000, -400000, -200000, 0,200000, 400000, 600000), 
                     limits = c(-400000, 500000), 
                     labels = label_comma()) +
  scale_x_continuous(breaks = c(2015:2021), minor_breaks = seq(2015, 2021, 0.25))

```


## Plot 2: Bee Balance per State

```{r}
#| echo: true
temp <- data %>%
  filter(state != "United States")

ggplot(data = temp, aes(x = year, y = bee_balance, color = bee_balance_state)) + 
  geom_line(size= 1) +
  facet_wrap(~state, nrow = 6) +
  theme_minimal() +
  scale_color_gradient(low = "black", high = "yellow",
                      name = "Bee balance", label = scales::comma) + 
  labs(x = "Year",
       y = "Yearly balance") +
  scale_x_continuous(breaks = c(2016,2018,2020), 
                     minor_breaks = seq(2015, 2021, 1)) +
  scale_y_continuous(label = scales::comma) +
   geom_hline(yintercept=0, linetype="dashed", color = "red") +
  theme(
   axis.text.x = element_text(angle=45))
```

## Plot 3: Bee Balance on Choropleth Map

```{r}
#| echo: true
plot_usmap(data = data, values = "bee_balance", color = "black",
           exclude = c("Alaska", "Nevada", "New Hampshire", "Delaware", "Rhode Island", "District of Columbia")) +
  scale_fill_continuous(low = "black", high = "yellow",
                        name = "Bee balance", label = scales::comma)  + 
  facet_wrap(~year, nrow = 3) +
  theme(axis.text.y = element_blank()) +
  theme_void()
```

##  {background-image="bee_balance_years.gif"}

## Code for Animated Choropleth Map

Create data frame for time series

```{r}
#| echo: true

# Libraries
library(pacman)
pacman::p_load(tidyverse, sf, ggrepel, gganimate, gifski, ggpubr, scales, zoo)

# Load data: Bee colonies lost
colony <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv')

# Compute "bee-balance" per state per year
bee_balance <- colony %>% 
  filter(state != "United States" & state != "Other States") %>% 
  group_by(year, state) %>% 
  summarise(year_balance = sum(colony_added - colony_lost, na.rm = TRUE))

# Create shape file (sf) object 
usa_sf <- read_sf("usa.json")
usa_sf <- usa_sf %>% 
  rename(state = NAME)

# Merge with bee data: 
usa_sf_merged <- usa_sf %>%
  left_join(bee_balance, by = "state") %>% 
  filter(state != "Alaska")   # no data for Alaska

# Create State Names
coordinates_state_names <- data.frame(state = usa_sf_merged$state, 
                                      coordinates = usa_sf_merged$geometry) %>% 
  distinct() %>% 
  filter(state %in% c("Texas", "California", "Florida", "North Dakota"))

```

## Code for Animated Choropleth Maps cont.

```{r}
#| echo: true

# Choropleth map:
map <- ggplot(usa_sf_merged) +
  geom_sf(aes(fill = year_balance), linewidth = 0, alpha = 0.9) +
  ggrepel::geom_label_repel(
    data = coordinates_state_names,
    aes(label = state, geometry = geometry),
    stat = "sf_coordinates",
    min.segment.length = 0, 
    force = 300,
    seed = 8, 
    size = 7
  ) +
  theme_void(
    base_size = 16
  ) +
  scale_fill_gradient2() +
  labs(title = "Bee Balance in {round(frame_time)}", 
       fill = "Balance") +
  theme(
    text = element_text(color = "#22211d"),
    plot.background = element_rect(fill = "#f5f5f2", color = NA),
    panel.background = element_rect(fill = "#f5f5f2", color = NA),
    legend.background = element_rect(fill = "#f5f5f2", color = NA),
    plot.title = element_text(
      size = 32, hjust = 0.01, color = "#4e4d47",
      margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")
    )
  ) + 
  transition_time(year)

# map_anim1 <- animate(map, fps = 10, height = 974, width = 1275, renderer = gifski_renderer())

# anim_save("bee_balance_years.gif", map_anim1)
```
